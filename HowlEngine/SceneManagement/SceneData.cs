// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do:
//
//    using HowlEngine.Graphics;
//
//    var sceneData = SceneData.FromJson(jsonString);

namespace HowlEngine.SceneManagement
{
    using System;
    using System.Collections.Generic;

    using System.Text.Json;
    using System.Text.Json.Serialization;
    using System.Globalization;

    using HowlEngine.Json;

    public partial class SceneData
    {
        [JsonPropertyName("compressionlevel")]
        public long CompressionLevel { get; set; }

        [JsonPropertyName("height")]
        public long Height { get; set; }

        [JsonPropertyName("infinite")]
        public bool Infinite { get; set; }

        [JsonPropertyName("layers")]
        public Layer[] Layers { get; set; }

        [JsonPropertyName("nextlayerid")]
        public long NextLayerId { get; set; }

        [JsonPropertyName("nextobjectid")]
        public long NextObjectId { get; set; }

        [JsonPropertyName("orientation")]
        public string Orientation { get; set; }

        [JsonPropertyName("renderorder")]
        public string RenderOrder { get; set; }

        [JsonPropertyName("tiledversion")]
        public string TiledVersion { get; set; }

        [JsonPropertyName("tileheight")]
        public long TileHeight { get; set; }

        [JsonPropertyName("tilesets")]
        public TilesetToken[] TilesetTokens { get; set; }

        [JsonPropertyName("tilewidth")]
        public long TilewWdth { get; set; }

        [JsonPropertyName("type")]
        public string Type { get; set; }

        [JsonPropertyName("version")]
        public string Version { get; set; }

        [JsonPropertyName("width")]
        public long Width { get; set; }
     
        public static SceneData FromJson(string json) => JsonSerializer.Deserialize<SceneData>(json, HowlEngine.Json.Converter.Settings);
    }

    public partial class Layer
    {
        [JsonPropertyName("data")]
        public long[] Data { get; set; }

        [JsonPropertyName("height")]
        public long Height { get; set; }

        [JsonPropertyName("id")]
        public long Id { get; set; }

        [JsonPropertyName("name")]
        public string Name { get; set; }

        [JsonPropertyName("opacity")]
        public long Opacity { get; set; }

        [JsonPropertyName("type")]
        public string Type { get; set; }

        [JsonPropertyName("visible")]
        public bool Visible { get; set; }

        [JsonPropertyName("width")]
        public long Width { get; set; }

        [JsonPropertyName("x")]
        public long X { get; set; }

        [JsonPropertyName("y")]
        public long Y { get; set; }
    }

    public partial class TilesetToken
    {
        [JsonPropertyName("firstgid")]
        public long FirstGid { get; set; }

        [JsonPropertyName("source")]
        public string Source { get; set; }
    }

    public static class SceneDataExtensions{
        public static string ToJson(this SceneData self) => JsonSerializer.Serialize(self, HowlEngine.Json.Converter.Settings);
    }
}
